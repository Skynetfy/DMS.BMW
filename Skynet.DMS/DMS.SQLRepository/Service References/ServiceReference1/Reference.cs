//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DMS.SQLRepository.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.AgentServiceSoap")]
    public interface AgentServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomFreeWithActivityList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryRoomFreeWithActivityList(string sAgentID, string sAuthCode, System.DateTime dCheckIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomFreeWithActivityList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryRoomFreeWithActivityListAsync(string sAgentID, string sAuthCode, System.DateTime dCheckIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomFreeAndPriceWithActivityList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryRoomFreeAndPriceWithActivityList(string sAgentID, string sAuthCode, System.DateTime dCheckIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomFreeAndPriceWithActivityList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryRoomFreeAndPriceWithActivityListAsync(string sAgentID, string sAuthCode, System.DateTime dCheckIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoubleCheckBeforeCreateOrderMerge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DoubleCheckBeforeCreateOrderMerge(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, string sActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoubleCheckBeforeCreateOrderMerge", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DoubleCheckBeforeCreateOrderMergeAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, string sActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoubleCheckBeforeCreateOrderWithActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DoubleCheckBeforeCreateOrderWithActivity(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, string sActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoubleCheckBeforeCreateOrderWithActivity", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DoubleCheckBeforeCreateOrderWithActivityAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, string sActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderWithActivity", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateOrderWithActivity(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo, string sActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderWithActivity", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateOrderWithActivityAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo, string sActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderWithActivityEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateOrderWithActivityEx(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string sActivityId, 
                    string sCreditNo, 
                    string payType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderWithActivityEx", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateOrderWithActivityExAsync(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string sActivityId, 
                    string sCreditNo, 
                    string payType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomFreeWithHotelList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryRoomFreeWithHotelList(string sAgentID, string sAuthCode, string jsonHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomFreeWithHotelList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryRoomFreeWithHotelListAsync(string sAgentID, string sAuthCode, string jsonHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomFree", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryRoomFree(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomFree", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryRoomFreeAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryOrder(string sAgentID, string sAuthCode, string jsonOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryOrderAsync(string sAgentID, string sAuthCode, string jsonOrderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryOrderIDFromRequestNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryOrderIDFromRequestNo(string sAgentID, string sAuthCode, string requestNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryOrderIDFromRequestNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryOrderIDFromRequestNoAsync(string sAgentID, string sAuthCode, string requestNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderMerge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateOrderMerge(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard, 
                    string sActivityId, 
                    string cardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderMerge", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateOrderMergeAsync(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard, 
                    string sActivityId, 
                    string cardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateOrder(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, string sComment, string sCreditNo, string JsonDailyRate, string requestNo, string jsonPaymentCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateOrderAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, string sComment, string sCreditNo, string JsonDailyRate, string requestNo, string jsonPaymentCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrder2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateOrder2(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard, 
                    string payType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrder2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateOrder2Async(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard, 
                    string payType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderEx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateOrderEx(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderEx", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateOrderExAsync(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModifyOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ModifyOrder(string sAgentID, string sAuthCode, string sOrderID, string sLinkName, System.DateTime dCheckIn, System.DateTime dCheckOut, int iRoomCount, string sLinkMobile, string sLinkEmail, string sComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModifyOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ModifyOrderAsync(string sAgentID, string sAuthCode, string sOrderID, string sLinkName, System.DateTime dCheckIn, System.DateTime dCheckOut, int iRoomCount, string sLinkMobile, string sLinkEmail, string sComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModifyOrderWithCreditNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ModifyOrderWithCreditNo(string sAgentID, string sAuthCode, string sOrderID, string sLinkName, System.DateTime dCheckIn, System.DateTime dCheckOut, int iRoomCount, string sCreditNo, string sLinkMobile, string sLinkEmail, string sComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModifyOrderWithCreditNo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ModifyOrderWithCreditNoAsync(string sAgentID, string sAuthCode, string sOrderID, string sLinkName, System.DateTime dCheckIn, System.DateTime dCheckOut, int iRoomCount, string sCreditNo, string sLinkMobile, string sLinkEmail, string sComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CancelOrder(string sAgentID, string sAuthCode, string sOrderID, string sHotelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CancelOrderAsync(string sAgentID, string sAuthCode, string sOrderID, string sHotelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelOrderNoCondition", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CancelOrderNoCondition(string sAgentID, string sAuthCode, string sOrderID, string sHotelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelOrderNoCondition", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CancelOrderNoConditionAsync(string sAgentID, string sAuthCode, string sOrderID, string sHotelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomPriceUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryRoomPriceUpdated(string sAgentID, string sAuthCode, System.DateTime dModifiedSince);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomPriceUpdated", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryRoomPriceUpdatedAsync(string sAgentID, string sAuthCode, System.DateTime dModifiedSince);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomPriceState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryRoomPriceState(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomPriceState", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryRoomPriceStateAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomPriceOneHotel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryRoomPriceOneHotel(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomPriceOneHotel", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryRoomPriceOneHotelAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryActivityIDList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryActivityIDList(string sAgentID, string sAuthCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryActivityIDList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryActivityIDListAsync(string sAgentID, string sAuthCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryHotelIDList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryHotelIDList(string sAgentID, string sAuthCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryHotelIDList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryHotelIDListAsync(string sAgentID, string sAuthCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryHotelIDListAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryHotelIDListAll(string sAgentID, string sAuthCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryHotelIDListAll", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryHotelIDListAllAsync(string sAgentID, string sAuthCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryHotel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryHotel(string sAgentID, string sAuthCode, string jsonHotelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryHotel", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryHotelAsync(string sAgentID, string sAuthCode, string jsonHotelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoubleCheckBeforeCreateOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DoubleCheckBeforeCreateOrder(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoubleCheckBeforeCreateOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DoubleCheckBeforeCreateOrderAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryHourRentHotelIDList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryHourRentHotelIDList(string sAgentID, string sAuthCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryHourRentHotelIDList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryHourRentHotelIDListAsync(string sAgentID, string sAuthCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomFreeWithHourRentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryRoomFreeWithHourRentList(string sAgentID, string sAuthCode, string jsonHotelNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomFreeWithHourRentList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryRoomFreeWithHourRentListAsync(string sAgentID, string sAuthCode, string jsonHotelNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomPriceWithHourRentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryRoomPriceWithHourRentList(string sAgentID, string sAuthCode, string jsonHotelNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryRoomPriceWithHourRentList", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QueryRoomPriceWithHourRentListAsync(string sAgentID, string sAuthCode, string jsonHotelNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoubleCheckBeforeCreateOrderWithHourRent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DoubleCheckBeforeCreateOrderWithHourRent(string sAgentID, string sAuthCode, string sHotelID, string sRoomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoubleCheckBeforeCreateOrderWithHourRent", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DoubleCheckBeforeCreateOrderWithHourRentAsync(string sAgentID, string sAuthCode, string sHotelID, string sRoomType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderWithHourRent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateOrderWithHourRent(string sAgentID, string sAuthCode, string sHotelID, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderWithHourRent", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateOrderWithHourRentAsync(string sAgentID, string sAuthCode, string sHotelID, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderWithHourRent2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateOrderWithHourRent2(string sAgentID, string sAuthCode, string sHotelID, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo, string sCreditNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateOrderWithHourRent2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateOrderWithHourRent2Async(string sAgentID, string sAuthCode, string sHotelID, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo, string sCreditNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoubleCheckBeforeCreateOrderForAllRoomType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DoubleCheckBeforeCreateOrderForAllRoomType(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DoubleCheckBeforeCreateOrderForAllRoomType", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DoubleCheckBeforeCreateOrderForAllRoomTypeAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RequestOrderRefund", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RequestOrderRefund(string sAgentID, string sAuthCode, string sOrderID, decimal dAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RequestOrderRefund", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RequestOrderRefundAsync(string sAgentID, string sAuthCode, string sOrderID, decimal dAmount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AgentServiceSoapChannel : DMS.SQLRepository.ServiceReference1.AgentServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgentServiceSoapClient : System.ServiceModel.ClientBase<DMS.SQLRepository.ServiceReference1.AgentServiceSoap>, DMS.SQLRepository.ServiceReference1.AgentServiceSoap {
        
        public AgentServiceSoapClient() {
        }
        
        public AgentServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AgentServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgentServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgentServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string QueryRoomFreeWithActivityList(string sAgentID, string sAuthCode, System.DateTime dCheckIn) {
            return base.Channel.QueryRoomFreeWithActivityList(sAgentID, sAuthCode, dCheckIn);
        }
        
        public System.Threading.Tasks.Task<string> QueryRoomFreeWithActivityListAsync(string sAgentID, string sAuthCode, System.DateTime dCheckIn) {
            return base.Channel.QueryRoomFreeWithActivityListAsync(sAgentID, sAuthCode, dCheckIn);
        }
        
        public string QueryRoomFreeAndPriceWithActivityList(string sAgentID, string sAuthCode, System.DateTime dCheckIn) {
            return base.Channel.QueryRoomFreeAndPriceWithActivityList(sAgentID, sAuthCode, dCheckIn);
        }
        
        public System.Threading.Tasks.Task<string> QueryRoomFreeAndPriceWithActivityListAsync(string sAgentID, string sAuthCode, System.DateTime dCheckIn) {
            return base.Channel.QueryRoomFreeAndPriceWithActivityListAsync(sAgentID, sAuthCode, dCheckIn);
        }
        
        public string DoubleCheckBeforeCreateOrderMerge(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, string sActivityId) {
            return base.Channel.DoubleCheckBeforeCreateOrderMerge(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, sActivityId);
        }
        
        public System.Threading.Tasks.Task<string> DoubleCheckBeforeCreateOrderMergeAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, string sActivityId) {
            return base.Channel.DoubleCheckBeforeCreateOrderMergeAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, sActivityId);
        }
        
        public string DoubleCheckBeforeCreateOrderWithActivity(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, string sActivityId) {
            return base.Channel.DoubleCheckBeforeCreateOrderWithActivity(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, sActivityId);
        }
        
        public System.Threading.Tasks.Task<string> DoubleCheckBeforeCreateOrderWithActivityAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, string sActivityId) {
            return base.Channel.DoubleCheckBeforeCreateOrderWithActivityAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, sActivityId);
        }
        
        public string CreateOrderWithActivity(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo, string sActivityId) {
            return base.Channel.CreateOrderWithActivity(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, JsonDailyRate, requestNo, sActivityId);
        }
        
        public System.Threading.Tasks.Task<string> CreateOrderWithActivityAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo, string sActivityId) {
            return base.Channel.CreateOrderWithActivityAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, JsonDailyRate, requestNo, sActivityId);
        }
        
        public string CreateOrderWithActivityEx(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string sActivityId, 
                    string sCreditNo, 
                    string payType) {
            return base.Channel.CreateOrderWithActivityEx(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, JsonDailyRate, requestNo, sActivityId, sCreditNo, payType);
        }
        
        public System.Threading.Tasks.Task<string> CreateOrderWithActivityExAsync(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string sActivityId, 
                    string sCreditNo, 
                    string payType) {
            return base.Channel.CreateOrderWithActivityExAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, JsonDailyRate, requestNo, sActivityId, sCreditNo, payType);
        }
        
        public string QueryRoomFreeWithHotelList(string sAgentID, string sAuthCode, string jsonHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut) {
            return base.Channel.QueryRoomFreeWithHotelList(sAgentID, sAuthCode, jsonHotelID, dCheckIn, dCheckOut);
        }
        
        public System.Threading.Tasks.Task<string> QueryRoomFreeWithHotelListAsync(string sAgentID, string sAuthCode, string jsonHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut) {
            return base.Channel.QueryRoomFreeWithHotelListAsync(sAgentID, sAuthCode, jsonHotelID, dCheckIn, dCheckOut);
        }
        
        public string QueryRoomFree(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType) {
            return base.Channel.QueryRoomFree(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType);
        }
        
        public System.Threading.Tasks.Task<string> QueryRoomFreeAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType) {
            return base.Channel.QueryRoomFreeAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType);
        }
        
        public string QueryOrder(string sAgentID, string sAuthCode, string jsonOrderID) {
            return base.Channel.QueryOrder(sAgentID, sAuthCode, jsonOrderID);
        }
        
        public System.Threading.Tasks.Task<string> QueryOrderAsync(string sAgentID, string sAuthCode, string jsonOrderID) {
            return base.Channel.QueryOrderAsync(sAgentID, sAuthCode, jsonOrderID);
        }
        
        public string QueryOrderIDFromRequestNo(string sAgentID, string sAuthCode, string requestNo) {
            return base.Channel.QueryOrderIDFromRequestNo(sAgentID, sAuthCode, requestNo);
        }
        
        public System.Threading.Tasks.Task<string> QueryOrderIDFromRequestNoAsync(string sAgentID, string sAuthCode, string requestNo) {
            return base.Channel.QueryOrderIDFromRequestNoAsync(sAgentID, sAuthCode, requestNo);
        }
        
        public string CreateOrderMerge(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard, 
                    string sActivityId, 
                    string cardID) {
            return base.Channel.CreateOrderMerge(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, sCreditNo, JsonDailyRate, requestNo, jsonPaymentCard, sActivityId, cardID);
        }
        
        public System.Threading.Tasks.Task<string> CreateOrderMergeAsync(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard, 
                    string sActivityId, 
                    string cardID) {
            return base.Channel.CreateOrderMergeAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, sCreditNo, JsonDailyRate, requestNo, jsonPaymentCard, sActivityId, cardID);
        }
        
        public string CreateOrder(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, string sComment, string sCreditNo, string JsonDailyRate, string requestNo, string jsonPaymentCard) {
            return base.Channel.CreateOrder(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, sComment, sCreditNo, JsonDailyRate, requestNo, jsonPaymentCard);
        }
        
        public System.Threading.Tasks.Task<string> CreateOrderAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, string sComment, string sCreditNo, string JsonDailyRate, string requestNo, string jsonPaymentCard) {
            return base.Channel.CreateOrderAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, sComment, sCreditNo, JsonDailyRate, requestNo, jsonPaymentCard);
        }
        
        public string CreateOrder2(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard, 
                    string payType) {
            return base.Channel.CreateOrder2(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, sComment, sCreditNo, JsonDailyRate, requestNo, jsonPaymentCard, payType);
        }
        
        public System.Threading.Tasks.Task<string> CreateOrder2Async(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard, 
                    string payType) {
            return base.Channel.CreateOrder2Async(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, sComment, sCreditNo, JsonDailyRate, requestNo, jsonPaymentCard, payType);
        }
        
        public string CreateOrderEx(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard) {
            return base.Channel.CreateOrderEx(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, sCreditNo, JsonDailyRate, requestNo, jsonPaymentCard);
        }
        
        public System.Threading.Tasks.Task<string> CreateOrderExAsync(
                    string sAgentID, 
                    string sAuthCode, 
                    string sHotelID, 
                    System.DateTime dCheckIn, 
                    System.DateTime dCheckOut, 
                    string sRoomType, 
                    int iRoomCount, 
                    string sLinkName, 
                    string sLinkMobile, 
                    string sLinkEmail, 
                    System.DateTime dArrTime, 
                    string sComment, 
                    string sCreditNo, 
                    string JsonDailyRate, 
                    string requestNo, 
                    string jsonPaymentCard) {
            return base.Channel.CreateOrderExAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, sCreditNo, JsonDailyRate, requestNo, jsonPaymentCard);
        }
        
        public string ModifyOrder(string sAgentID, string sAuthCode, string sOrderID, string sLinkName, System.DateTime dCheckIn, System.DateTime dCheckOut, int iRoomCount, string sLinkMobile, string sLinkEmail, string sComment) {
            return base.Channel.ModifyOrder(sAgentID, sAuthCode, sOrderID, sLinkName, dCheckIn, dCheckOut, iRoomCount, sLinkMobile, sLinkEmail, sComment);
        }
        
        public System.Threading.Tasks.Task<string> ModifyOrderAsync(string sAgentID, string sAuthCode, string sOrderID, string sLinkName, System.DateTime dCheckIn, System.DateTime dCheckOut, int iRoomCount, string sLinkMobile, string sLinkEmail, string sComment) {
            return base.Channel.ModifyOrderAsync(sAgentID, sAuthCode, sOrderID, sLinkName, dCheckIn, dCheckOut, iRoomCount, sLinkMobile, sLinkEmail, sComment);
        }
        
        public string ModifyOrderWithCreditNo(string sAgentID, string sAuthCode, string sOrderID, string sLinkName, System.DateTime dCheckIn, System.DateTime dCheckOut, int iRoomCount, string sCreditNo, string sLinkMobile, string sLinkEmail, string sComment) {
            return base.Channel.ModifyOrderWithCreditNo(sAgentID, sAuthCode, sOrderID, sLinkName, dCheckIn, dCheckOut, iRoomCount, sCreditNo, sLinkMobile, sLinkEmail, sComment);
        }
        
        public System.Threading.Tasks.Task<string> ModifyOrderWithCreditNoAsync(string sAgentID, string sAuthCode, string sOrderID, string sLinkName, System.DateTime dCheckIn, System.DateTime dCheckOut, int iRoomCount, string sCreditNo, string sLinkMobile, string sLinkEmail, string sComment) {
            return base.Channel.ModifyOrderWithCreditNoAsync(sAgentID, sAuthCode, sOrderID, sLinkName, dCheckIn, dCheckOut, iRoomCount, sCreditNo, sLinkMobile, sLinkEmail, sComment);
        }
        
        public string CancelOrder(string sAgentID, string sAuthCode, string sOrderID, string sHotelID) {
            return base.Channel.CancelOrder(sAgentID, sAuthCode, sOrderID, sHotelID);
        }
        
        public System.Threading.Tasks.Task<string> CancelOrderAsync(string sAgentID, string sAuthCode, string sOrderID, string sHotelID) {
            return base.Channel.CancelOrderAsync(sAgentID, sAuthCode, sOrderID, sHotelID);
        }
        
        public string CancelOrderNoCondition(string sAgentID, string sAuthCode, string sOrderID, string sHotelID) {
            return base.Channel.CancelOrderNoCondition(sAgentID, sAuthCode, sOrderID, sHotelID);
        }
        
        public System.Threading.Tasks.Task<string> CancelOrderNoConditionAsync(string sAgentID, string sAuthCode, string sOrderID, string sHotelID) {
            return base.Channel.CancelOrderNoConditionAsync(sAgentID, sAuthCode, sOrderID, sHotelID);
        }
        
        public string QueryRoomPriceUpdated(string sAgentID, string sAuthCode, System.DateTime dModifiedSince) {
            return base.Channel.QueryRoomPriceUpdated(sAgentID, sAuthCode, dModifiedSince);
        }
        
        public System.Threading.Tasks.Task<string> QueryRoomPriceUpdatedAsync(string sAgentID, string sAuthCode, System.DateTime dModifiedSince) {
            return base.Channel.QueryRoomPriceUpdatedAsync(sAgentID, sAuthCode, dModifiedSince);
        }
        
        public string QueryRoomPriceState(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType) {
            return base.Channel.QueryRoomPriceState(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType);
        }
        
        public System.Threading.Tasks.Task<string> QueryRoomPriceStateAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType) {
            return base.Channel.QueryRoomPriceStateAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType);
        }
        
        public string QueryRoomPriceOneHotel(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut) {
            return base.Channel.QueryRoomPriceOneHotel(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut);
        }
        
        public System.Threading.Tasks.Task<string> QueryRoomPriceOneHotelAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut) {
            return base.Channel.QueryRoomPriceOneHotelAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut);
        }
        
        public string QueryActivityIDList(string sAgentID, string sAuthCode) {
            return base.Channel.QueryActivityIDList(sAgentID, sAuthCode);
        }
        
        public System.Threading.Tasks.Task<string> QueryActivityIDListAsync(string sAgentID, string sAuthCode) {
            return base.Channel.QueryActivityIDListAsync(sAgentID, sAuthCode);
        }
        
        public string QueryHotelIDList(string sAgentID, string sAuthCode) {
            return base.Channel.QueryHotelIDList(sAgentID, sAuthCode);
        }
        
        public System.Threading.Tasks.Task<string> QueryHotelIDListAsync(string sAgentID, string sAuthCode) {
            return base.Channel.QueryHotelIDListAsync(sAgentID, sAuthCode);
        }
        
        public string QueryHotelIDListAll(string sAgentID, string sAuthCode) {
            return base.Channel.QueryHotelIDListAll(sAgentID, sAuthCode);
        }
        
        public System.Threading.Tasks.Task<string> QueryHotelIDListAllAsync(string sAgentID, string sAuthCode) {
            return base.Channel.QueryHotelIDListAllAsync(sAgentID, sAuthCode);
        }
        
        public string QueryHotel(string sAgentID, string sAuthCode, string jsonHotelID) {
            return base.Channel.QueryHotel(sAgentID, sAuthCode, jsonHotelID);
        }
        
        public System.Threading.Tasks.Task<string> QueryHotelAsync(string sAgentID, string sAuthCode, string jsonHotelID) {
            return base.Channel.QueryHotelAsync(sAgentID, sAuthCode, jsonHotelID);
        }
        
        public string DoubleCheckBeforeCreateOrder(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType) {
            return base.Channel.DoubleCheckBeforeCreateOrder(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType);
        }
        
        public System.Threading.Tasks.Task<string> DoubleCheckBeforeCreateOrderAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut, string sRoomType) {
            return base.Channel.DoubleCheckBeforeCreateOrderAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut, sRoomType);
        }
        
        public string QueryHourRentHotelIDList(string sAgentID, string sAuthCode) {
            return base.Channel.QueryHourRentHotelIDList(sAgentID, sAuthCode);
        }
        
        public System.Threading.Tasks.Task<string> QueryHourRentHotelIDListAsync(string sAgentID, string sAuthCode) {
            return base.Channel.QueryHourRentHotelIDListAsync(sAgentID, sAuthCode);
        }
        
        public string QueryRoomFreeWithHourRentList(string sAgentID, string sAuthCode, string jsonHotelNo) {
            return base.Channel.QueryRoomFreeWithHourRentList(sAgentID, sAuthCode, jsonHotelNo);
        }
        
        public System.Threading.Tasks.Task<string> QueryRoomFreeWithHourRentListAsync(string sAgentID, string sAuthCode, string jsonHotelNo) {
            return base.Channel.QueryRoomFreeWithHourRentListAsync(sAgentID, sAuthCode, jsonHotelNo);
        }
        
        public string QueryRoomPriceWithHourRentList(string sAgentID, string sAuthCode, string jsonHotelNo) {
            return base.Channel.QueryRoomPriceWithHourRentList(sAgentID, sAuthCode, jsonHotelNo);
        }
        
        public System.Threading.Tasks.Task<string> QueryRoomPriceWithHourRentListAsync(string sAgentID, string sAuthCode, string jsonHotelNo) {
            return base.Channel.QueryRoomPriceWithHourRentListAsync(sAgentID, sAuthCode, jsonHotelNo);
        }
        
        public string DoubleCheckBeforeCreateOrderWithHourRent(string sAgentID, string sAuthCode, string sHotelID, string sRoomType) {
            return base.Channel.DoubleCheckBeforeCreateOrderWithHourRent(sAgentID, sAuthCode, sHotelID, sRoomType);
        }
        
        public System.Threading.Tasks.Task<string> DoubleCheckBeforeCreateOrderWithHourRentAsync(string sAgentID, string sAuthCode, string sHotelID, string sRoomType) {
            return base.Channel.DoubleCheckBeforeCreateOrderWithHourRentAsync(sAgentID, sAuthCode, sHotelID, sRoomType);
        }
        
        public string CreateOrderWithHourRent(string sAgentID, string sAuthCode, string sHotelID, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo) {
            return base.Channel.CreateOrderWithHourRent(sAgentID, sAuthCode, sHotelID, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, JsonDailyRate, requestNo);
        }
        
        public System.Threading.Tasks.Task<string> CreateOrderWithHourRentAsync(string sAgentID, string sAuthCode, string sHotelID, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo) {
            return base.Channel.CreateOrderWithHourRentAsync(sAgentID, sAuthCode, sHotelID, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, JsonDailyRate, requestNo);
        }
        
        public string CreateOrderWithHourRent2(string sAgentID, string sAuthCode, string sHotelID, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo, string sCreditNo) {
            return base.Channel.CreateOrderWithHourRent2(sAgentID, sAuthCode, sHotelID, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, JsonDailyRate, requestNo, sCreditNo);
        }
        
        public System.Threading.Tasks.Task<string> CreateOrderWithHourRent2Async(string sAgentID, string sAuthCode, string sHotelID, string sRoomType, int iRoomCount, string sLinkName, string sLinkMobile, string sLinkEmail, System.DateTime dArrTime, string sComment, string JsonDailyRate, string requestNo, string sCreditNo) {
            return base.Channel.CreateOrderWithHourRent2Async(sAgentID, sAuthCode, sHotelID, sRoomType, iRoomCount, sLinkName, sLinkMobile, sLinkEmail, dArrTime, sComment, JsonDailyRate, requestNo, sCreditNo);
        }
        
        public string DoubleCheckBeforeCreateOrderForAllRoomType(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut) {
            return base.Channel.DoubleCheckBeforeCreateOrderForAllRoomType(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut);
        }
        
        public System.Threading.Tasks.Task<string> DoubleCheckBeforeCreateOrderForAllRoomTypeAsync(string sAgentID, string sAuthCode, string sHotelID, System.DateTime dCheckIn, System.DateTime dCheckOut) {
            return base.Channel.DoubleCheckBeforeCreateOrderForAllRoomTypeAsync(sAgentID, sAuthCode, sHotelID, dCheckIn, dCheckOut);
        }
        
        public string RequestOrderRefund(string sAgentID, string sAuthCode, string sOrderID, decimal dAmount) {
            return base.Channel.RequestOrderRefund(sAgentID, sAuthCode, sOrderID, dAmount);
        }
        
        public System.Threading.Tasks.Task<string> RequestOrderRefundAsync(string sAgentID, string sAuthCode, string sOrderID, decimal dAmount) {
            return base.Channel.RequestOrderRefundAsync(sAgentID, sAuthCode, sOrderID, dAmount);
        }
    }
}
